"0","towModel <- '"
"0","// unpack data from R"
"0","var lazinessPrior = datafromR[""lazinessPrior""][0]"
"0","var lazyPulling = datafromR[""lazyPulling""][0]"
"0","var matchInfo = datafromR[""matchInfo""]"
"0","var tugOfWarModel = function(){"
"0","    var strength = mem(function(person){"
"0","      return gaussian(10, 3)"
"0","    })"
"0","    // laziness is a memoized function of a person and match"
"0","    // so we can later ask if a person was lazy on a particular match"
"0","    var lazy = mem(function(person, match){"
"0","      return flip(lazinessPrior)"
"0","    })"
"0","    var pulling = function(person, match) {"
"0","      return lazy(person, match) ?"
"0","              strength(person) * lazyPulling :"
"0","              strength(person)"
"0","    }"
"0","    var totalPulling = function(team, match){"
"0","      return sum(map(pulling, team)) "
"0","    }"
"0","  "
"0","    var winner = function(team1, team2, match){"
"0","      return totalPulling(team1, match) > totalPulling(team2, match) ? team1 : team2"
"0","    }"
"0","    var beat = function(team1,team2, match){"
"0","      return winner(team1,team2, match) == team1"
"0","    }"
"0","    condition(beat(matchInfo.match1.winner, "
"0","                   matchInfo.match1.loser,"
"0","                    matchInfo.match1.match))"
"0","    matchInfo.match2 ? "
"0","        condition(beat(matchInfo.match2.winner, "
"0","                       matchInfo.match2.loser, "
"0","                       matchInfo.match2.match)) : null"
"0","    matchInfo.match3 ? "
"0","        condition(beat(matchInfo.match3.winner, "
"0","                       matchInfo.match3.loser, "
"0","                       matchInfo.match3.match)) : null"
"0","    // example return statements"
"0","    // you can return a JSON object of whatever you want"
"0","    return {"
"0","      lazy: lazy(matchInfo.query.lazy),"
"0","      strength: strength(matchInfo.query.strength),"
"0","      winner: beat(matchInfo.query.team1, matchInfo.query.team2)"
"0","    }"
"0","}"
"0","'"
